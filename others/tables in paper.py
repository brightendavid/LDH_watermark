from pylab import *


def table1():
    # train-val变化曲线  其他noise layer
    mpl.rcParams['font.sans-serif'] = ['SimHei']  # 添加这条可以让图形显示中文
    y_axis_data_train = [0.131521046,
                         0.070876077,
                         0.071280032,
                         0.069045499,
                         0.071803942,
                         0.0705157,
                         0.068689384,
                         0.068340443,
                         0.071731441,
                         0.069890901,
                         0.064481422,
                         0.064105906,
                         0.065224625,
                         0.066051044,
                         0.067479543,
                         0.068725683,
                         0.068368457,
                         0.06861183,
                         0.069127172,
                         0.06946782,
                         0.067301743,
                         0.071351208,
                         0.071889564,
                         0.070253104,
                         0.071868502,
                         0.072342649,
                         0.07144738,
                         0.072621442,
                         0.073878527,
                         0.073503986,
                         0.073812209,
                         0.074261278,
                         0.073831558,
                         0.075227968,
                         0.076312043,
                         0.076831795,
                         0.075607844,
                         0.076468952,
                         0.076644167,
                         0.079541631,
                         0.080069982,
                         0.078327246,
                         0.080109045,
                         0.081026375,
                         0.079420291,
                         0.077340871,
                         0.081374183,
                         0.082663737,
                         0.082599521,
                         0.082206398,
                         0.080764219,
                         0.081589535,
                         0.086825587,
                         0.086124711,
                         0.086042047,
                         0.088022217,
                         0.089154467,
                         0.088718377,
                         0.087485455,
                         0.085438348,
                         0.089675799,
                         0.087210856,
                         0.0915097,
                         0.089884676,
                         0.092460692,
                         0.089911342,
                         0.094292186,
                         0.096003503,
                         0.093986928,
                         0.098851956,
                         0.091578476,
                         0.094988555,
                         0.096135207,
                         0.098110378,
                         0.098109245,
                         0.099894814,
                         0.095607638,
                         0.101668686,
                         0.102549486,
                         0.102432661,
                         0.100439109,
                         0.100179598,
                         0.103094608,
                         0.104480386,
                         0.103388868,
                         0.100586623,
                         0.105649143,
                         0.105365008,
                         0.110037185,
                         0.108976476,
                         0.109818436,
                         ]
    x_axis_data = []
    for i in range(91):
        x_axis_data.append(i)
    y_axis_data_val = [0.144748181,
                       0.136135444,
                       0.103369869,
                       0.109024495,
                       0.096108779,
                       0.119393818,
                       0.096110463,
                       0.108217925,
                       0.093440808,
                       0.106683351,
                       0.10182254,
                       0.110982776,
                       0.153949142,
                       0.104031064,
                       0.115828902,
                       0.098542355,
                       0.110015631,
                       0.112212844,
                       0.107200198,
                       0.130271077,
                       0.155253336,
                       0.138640478,
                       0.12581636,
                       0.138507053,
                       0.121652827,
                       0.136426345,
                       0.121927962,
                       0.155139938,
                       0.123447448,
                       0.141505003,
                       0.152437493,
                       0.144564703,
                       0.136208355,
                       0.140796527,
                       0.141785204,
                       0.129005253,
                       0.138490751,
                       0.136153609,
                       0.135551423,
                       0.145059362,
                       0.136074558,
                       0.136997044,
                       0.139910012,
                       0.179522336,
                       0.142621353,
                       0.137203991,
                       0.160142317,
                       0.137470022,
                       0.13622044,
                       0.138035208,
                       0.140095517,
                       0.159498498,
                       0.152677104,
                       0.162380606,
                       0.161252782,
                       0.139952376,
                       0.219837725,
                       0.184181049,
                       0.147392988,
                       0.138110444,
                       0.191042766,
                       0.136002943,
                       0.134203717,
                       0.131814748,
                       0.156152144,
                       0.143486306,
                       0.172929525,
                       0.151065975,
                       0.203264505,
                       0.201290667,
                       0.209096089,
                       0.142723188,
                       0.254492879,
                       0.153281361,
                       0.224911198,
                       0.182487577,
                       0.167431429,
                       0.194010496,
                       0.216387078,
                       0.171993956,
                       0.183282644,
                       0.152983844,
                       0.172385395,
                       0.161716372,
                       0.157339558,
                       0.237013757,
                       0.177791387,
                       0.211732686,
                       0.233364999,
                       0.271491259,
                       0.191749379,
                       ]

    plt.figure()
    # plot中参数的含义分别是横轴值，纵轴值，线的形状，颜色，透明度,线的宽度和标签
    plt.plot(x_axis_data, y_axis_data_train, '--', color='#0000FF', alpha=1, linewidth=1, label='train')
    plt.plot(x_axis_data, y_axis_data_val, '-', color='#FF0000', alpha=1, linewidth=1, label='val')

    # 显示标签，如果不加这句，即使在plot中加了label='一些数字'的参数，最终还是不会显示标签
    plt.legend(loc="upper left", fontsize=18)
    plt.yticks(fontsize=15)
    plt.xticks(fontsize=15)
    plt.xlim(0, None)

    plt.xlabel('epoch', fontsize=18)
    plt.ylabel('loss', fontsize=18)

    plt.show()
    plt.savefig('demo.png')  # 保存该图片


def table3():
    # train-val变化曲线  其他noise layer
    mpl.rcParams['font.sans-serif'] = ['SimHei']  # 添加这条可以让图形显示中文
    y_axis_data_train = [0.164287627,
                         0.106327094,
                         0.102702096,
                         0.094155334,
                         0.092398569,
                         0.0865383,
                         0.086976901,
                         0.08336661,
                         0.0805199,
                         0.080844656,
                         0.071969286,
                         0.069895163,
                         0.073208131,
                         0.067418113,
                         0.072309338,
                         0.072928131,
                         0.068816498,
                         0.068983063,
                         0.069109336,
                         0.068616338,
                         0.066945061,
                         0.06576205,
                         0.069104262,
                         0.071796231,
                         0.064170986,
                         0.065156184,
                         0.067481048,
                         0.071383521,
                         0.069274679,
                         0.063994624,
                         0.066634215,
                         0.068185888,
                         0.066831715,
                         0.068239294,
                         0.064826153,
                         0.067311235,
                         0.070044115,
                         0.064889058,
                         0.068240002,
                         0.071499363,
                         0.06958323,
                         0.070326991,
                         0.062948488,
                         0.068415962,
                         0.063663393,
                         0.066350624,
                         0.068896942,
                         0.065278433,
                         0.065761648,
                         0.069834821,
                         0.067252696,
                         0.071842417,
                         0.065328084,
                         0.068990648,
                         0.071660556,
                         0.06675604,
                         0.068832345,
                         0.06809283,
                         0.063273646,
                         0.065999158,
                         0.069227234,
                         0.066053174,
                         0.067154758,
                         0.069929428,
                         0.067108378,
                         0.067385569,
                         0.065038629,
                         0.069846995,
                         0.065957494,
                         0.066803142,
                         0.066842064,
                         0.06770689,
                         0.066567242,
                         0.060857829,
                         0.069018185,
                         0.065109707,
                         0.068684943,
                         0.067712925,
                         0.064995788,
                         0.066617787,
                         0.066672765,
                         0.067070015,
                         0.064073004,
                         0.065094449,
                         0.064716689,
                         0.067547441,
                         0.065503702,
                         0.065479964,
                         0.066171899,
                         0.066801235
                         ]
    x_axis_data = []
    for i in range(90):
        x_axis_data.append(i)
    y_axis_data_val = [0.083114974,
                       0.072642237,
                       0.055385232,
                       0.063949063,
                       0.092408665,
                       0.058039408,
                       0.059276354,
                       0.070249587,
                       0.055650771,
                       0.062450249,
                       0.058874957,
                       0.052295584,
                       0.080977477,
                       0.04956992,
                       0.070034884,
                       0.056687213,
                       0.050677937,
                       0.046061583,
                       0.050075281,
                       0.059211019,
                       0.050520681,
                       0.056758266,
                       0.07561177,
                       0.049188655,
                       0.053344946,
                       0.064641066,
                       0.069626138,
                       0.049645845,
                       0.057920486,
                       0.042301476,
                       0.056201421,
                       0.048738249,
                       0.062850073,
                       0.049459022,
                       0.080824979,
                       0.055537738,
                       0.046102509,
                       0.049653638,
                       0.065637648,
                       0.067046002,
                       0.05271107,
                       0.047904521,
                       0.0671928,
                       0.060769718,
                       0.078059219,
                       0.054603409,
                       0.053190209,
                       0.056020033,
                       0.059107486,
                       0.057500824,
                       0.046268132,
                       0.079249844,
                       0.050384052,
                       0.046267014,
                       0.119190454,
                       0.042909827,
                       0.053705331,
                       0.06704741,
                       0.055776685,
                       0.06146552,
                       0.050093874,
                       0.064515077,
                       0.054533593,
                       0.069553033,
                       0.05563562,
                       0.052363865,
                       0.046375766,
                       0.055545639,
                       0.050717078,
                       0.054008108,
                       0.045865946,
                       0.048106801,
                       0.051420469,
                       0.069876164,
                       0.059572347,
                       0.062993743,
                       0.063713938,
                       0.054290764,
                       0.050025392,
                       0.064624473,
                       0.054430366,
                       0.058589388,
                       0.056045741,
                       0.052330695,
                       0.056145638,
                       0.103053384,
                       0.065377697,
                       0.088251695,
                       0.045382548,
                       0.056593023,
                       ]

    plt.figure()
    # plot中参数的含义分别是横轴值，纵轴值，线的形状，颜色，透明度,线的宽度和标签
    plt.plot(x_axis_data, y_axis_data_train, '--', color='#0000FF', alpha=1, linewidth=1, label='train')
    plt.plot(x_axis_data, y_axis_data_val, '-', color='#FF0000', alpha=1, linewidth=1, label='val')

    # 显示标签，如果不加这句，即使在plot中加了label='一些数字'的参数，最终还是不会显示标签
    plt.legend(loc="upper left", fontsize=18)

    plt.yticks(fontsize=15)
    plt.xticks(fontsize=15)
    plt.xlim(0, None)

    plt.xlabel('epoch', fontsize=18)
    plt.ylabel('loss', fontsize=18)

    plt.show()
    plt.savefig('demo.png')  # 保存该图片


def table2():
    # f1 -jpeg
    mpl.rcParams['font.sans-serif'] = ['SimHei']  # 添加这条可以让图形显示中文

    x_axis_data = [60, 70, 80, 90, 100]
    y_axis_data = [0.32, 0.52, 0.67, 0.77, 0.98]
    plt.figure()
    # plot中参数的含义分别是横轴值，纵轴值，线的形状，颜色，透明度,线的宽度和标签
    plt.plot(x_axis_data, y_axis_data, 'ro-', color='#4169E1', alpha=1, linewidth=1, label='一些数字')

    # 显示标签，如果不加这句，即使在plot中加了label='一些数字'的参数，最终还是不会显示标签
    # plt.legend(loc="upper right")
    plt.yticks(fontsize=15)
    plt.xticks(fontsize=15)

    plt.xlabel('JPEG压缩质量', fontsize=18)
    plt.ylabel('F1指标', fontsize=18)

    plt.show()
    plt.savefig('demo.png')  # 保存该图片


def cai2hui():
    import cv2 as cv
    src = cv.imread(r"C:\Users\brighten\Desktop\data\loss_others.tif", 0)
    cv.imwrite(r"C:\Users\brighten\Desktop\data\loss_others_hui.tif", src)


if __name__ == '__main__':
    # table1()
    cai2hui()
    # table1()
